import PropTypes from "prop-types";
import { useState } from "react";
import { ReactComponent as CartIcon } from "../../icons/CartSecond.svg";
import { CartBtnStyled } from "./CartBtn.styled";
import { Notify } from "notiflix/build/notiflix-notify-aio";
import axios from "axios";

const API_ADD_TO_CART = "https://appstore.up.railway.app/shop-service/api/user/cart/cart-item";

export const CartBtn = ({ id, quantity = 1, big, disabled }) => {
    const [inCart, setInCart] = useState(false);

    const handleAddToCart = async () => {
        const token = sessionStorage.getItem("accessToken");

        if (!token) {
            Notify.failure("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!");
            return;
        }

        try {
            const quantityToAdd = quantity || 1; // ‚úÖ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 1

            // üî• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É —á–µ—Ä–µ–∑ URL API
            await axios.post(
                `${API_ADD_TO_CART}/${id}/${quantityToAdd}/create`,
                null, // Body –Ω–µ –Ω—É–∂–µ–Ω
                {
                    headers: { Authorization: `Bearer ${token}` },
                }
            );

            setInCart(true); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ UI
            Notify.success("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É:", error);
            Notify.failure("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.");
        }
    };

    return (
        <CartBtnStyled
            type="button"
            aria-label={inCart ? "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã" : "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"}
            onClick={handleAddToCart}
            $inList={inCart}
            $big={big}
            disabled={disabled}
        >
            <CartIcon />
            {inCart ? "–í –ö–û–†–ó–ò–ù–ï" : "–î–û–ë–ê–í–ò–¢–¨ –ù–ê –ö–û–†–ó–ò–ù–ö–£"}
        </CartBtnStyled>
    );
};

CartBtn.propTypes = {
    id: PropTypes.number.isRequired,
    quantity: PropTypes.number,
    big: PropTypes.bool,
    disabled: PropTypes.bool,
};
